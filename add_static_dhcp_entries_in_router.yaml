---
- name: Add static DNS entries for all hosts with MAC addresses to OpenWRT router
  hosts: openwrt_main_router
  gather_facts: false
  become: true
  vars:
    hosts_with_mac: >-
      {{
        groups['all'] | map('extract', hostvars) | selectattr('mac_address', 'defined') | map(attribute='inventory_hostname') | list
      }}
  tasks:
    - name: Ensure the 'dnsmasq' package is installed
      opkg:
        name: dnsmasq
        state: present

    - name: Backup the original dhcp config file
      copy:
        src: /etc/config/dhcp
        dest: /etc/config/dhcp.bak
        remote_src: yes

    - name: Check if config host section exists
      shell: grep -q '^config host' /etc/config/dhcp || echo "NO"
      register: host_section_check
      changed_when: false

    - name: Add config host section if not present
      lineinfile:
        path: /etc/config/dhcp
        line: "config host"
        insertafter: EOF
      when: host_section_check.stdout == "NO"

    - name: Debug hosts_with_mac variable
      debug:
        msg: "{{ hosts_with_mac }}"

    - name: Ensure static DNS entries are present for each host
      block:
        - name: Check if static entry already exists
          shell: grep -q "option mac '{{ hostvars[item].mac_address }}'" /etc/config/dhcp && echo "YES" || echo "NO"
          register: static_entry_check
          changed_when: false
          loop: "{{ hosts_with_mac }}"
          loop_control:
            loop_var: item

        - name: Add static DNS entry if not present
          lineinfile:
            path: /etc/config/dhcp
            insertafter: '^config host'
            line: "{{ '\t' }}option name '{{ item }}'\n{{ '\t' }}option ip '{{ hostvars[item].ansible_host }}'\n{{ '\t' }}option mac '{{ hostvars[item].mac_address }}'\n{{ '\t' }}option dns '1'\n"          
          when: static_entry_check.results[item|int].stdout == "NO"
          loop: "{{ hosts_with_mac }}"
          loop_control:
            loop_var: item

    - name: Restart dnsmasq service to apply changes
      service:
        name: dnsmasq
        state: restarted
